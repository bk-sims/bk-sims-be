# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CD pipeline

env:
  BACKEND_DIR: ./backend
  AWS_REGION: ap-southeast-1
  DOCKERHUB_REPO: luongla/bk-sims-auth-activity-service

on:
  push:
    branches: ["main"]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Update application properties
        run: |
          cd $BACKEND_DIR/src/main/resources
          sed -i "s|<db_url>|${{ secrets.DB_URL }}|g" application-prod.yml
          sed -i "s|<db_username>|${{ secrets.DB_USERNAME }}|g" application-prod.yml
          sed -i "s|<db_password>|${{ secrets.DB_PASSWORD }}|g" application-prod.yml
          sed -i "s|<aws_s3_key_id>|${{ secrets.AWS_S3_KEY_ID }}|g" application-prod.yml
          sed -i "s|<aws_s3_key_secret>|${{ secrets.AWS_S3_KEY_SECRET }}|g" application-prod.yml
          sed -i "s|<jwt_secret_key>|${{ secrets.JWT_SECRET_KEY }}|g" application-prod.yml

      - name: Login to DockerHub
        run: docker login -u ${{secrets.DOCKERHUB_USER_NAME}} -p ${{secrets.DOCKERHUB_ACCESS_TOKEN}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.BACKEND_DIR }}
          push: true
          tags: luongla/bk-sims-auth-activity-service:latest, luongla/bk-sims-auth-activity-service:${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy authentication and activity service
        uses: dawidd6/action-ansible-playbook@v2
        with:
          directory: ./ansible-playbook
          inventory: ${{ secrets.ACTIVITY_AUTHENTICATION_SERVICE_IP }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          playbook: deploy.yml
          options: |
            --extra-vars "image_name=bk-sims-auth-activity-service"
