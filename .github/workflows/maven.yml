# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

env:
  BACKEND_DIR: ./backend
  AWS_REGION: ap-southeast-1
  DOCKERHUB_REPO: luongla/bk-sims-be

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      # - name: Create env file
      #   run:

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-1
          role-to-assume: arn:aws:iam::059630626080:role/GitHubAction-SSMFullAccess

      - name: Test AWS connection
        run: |
          aws sts get-caller-identity
          aws ssm get-parameter --name ".env.properties"

      - name: Login to DockerHub
        run: docker login -u ${{secrets.DOCKERHUB_USER_NAME}} -p ${{secrets.DOCKERHUB_ACCESS_TOKEN}}

      # - name:

      # - name: Build with Maven
      #   run: mvn -B package --file ${{ env.BACKEND_DIR }}/pom.xml
